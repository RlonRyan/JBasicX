apply plugin: 'java'

version = '0.1.0'

jar {
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    baseName = 'JBasicX'
    version =  "${version}"
    manifest {
        attributes("Implementation-Title": "JBasicX",
                   "Implementation-Version": version)
    }
}

sourceSets {
    main {
        java {
            srcDir 'src'
            exclude 'JTestsX/**'
        }
        resources {
            srcDir 'src'
        }
    }
    test {
        java {
            srcDir 'src'
        }
        resources {
            srcDir 'src'
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    test {
        compile group: 'junit', name: 'junit', version: '4.11'
    }
}

test {
    testLogging {
        events 'started', 'passed', 'failed'
    }
    afterTest {
        copy {
            from "${projectDir}/build/classes/test/Output"
            into "${projectDir}/build/test-results/output-screen"
        }
    }
}

task cleanPreTest << {
    delete fileTree(dir: "${projectDir}/build/classes/test/Output", include: "*.png")
    delete fileTree(dir: "${projectDir}/test-results/output-screen", include: "*.png")
}

test.dependsOn(cleanPreTest)


task dist {
    description "Generate the dist(s) into the dist folder."
}

task distSetup {
    description "Generate the dist folder."
    delete "${projectDir}/dist"
    copy {
        from "${buildDir}/libs"
        into "${projectDir}/dist/main"
    }
    copy {
        from "${projectDir}/build/classes/test/Output"
        into "${projectDir}/dist/test"
    }
}

task zipDist(type: Zip, dependsOn: distSetup) {
    from "${projectDir}/dist/main"
    from "${projectDir}/Readme.md"
    destinationDir = file("${projectDir}/dist")
    version = "${version}"
    appendix = "Main"
    doLast {
        println "Created ${zipDist.archiveName}"
    }
}

task zipTest(type: Zip, dependsOn: distSetup) {
    from "${projectDir}/dist/test"
    from "${projectDir}/Readme.md"
    destinationDir = file("${projectDir}/dist")
    version = "${version}"
    appendix = "Test Output"
    doLast{
        println "Created ${zipTest.archiveName}"
    }
}

distSetup.dependsOn(build)

dist.dependsOn(zipDist)
dist.dependsOn(zipTest)

task wrapper(type: Wrapper) {
    description "Generates the Gradle wrapper for the project."
    gradleVersion = '2.2.1'
}
